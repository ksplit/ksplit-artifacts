#!/bin/bash

ARTIFACTS_HOME="${HOME}/ksplit-artifacts"
MSR_ARTIFACT="${ARTIFACTS_HOME}/msr"

BASE_DIR="/opt/ksplit"
BFLANK_BUILD="${BASE_DIR}/bflank/build"

LVD_LINUX="${BASE_DIR}/lvd-linux"
LVD_DOMAINS="${LVD_LINUX}/lcd-domains"
TEST_MODS="${LVD_DOMAINS}/test_mods"

TESTMOD="vmfunc_klcd"

TESTMOD_BUILD_DIR="${LVD_DOMAINS}/build/test_mods/${TESTMOD}"
BOOT_KO="${TESTMOD_BUILD_DIR}/boot/lcd_test_mod_${TESTMOD}_boot.ko"
KLCD_KO="${TESTMOD_BUILD_DIR}/msr_klcd/lcd_test_mod_${TESTMOD}_caller_klcd.ko"
LCD_KO="${TESTMOD_BUILD_DIR}/msr_lcd/lcd_test_mod_${TESTMOD}_callee_lcd.ko"


chown() {
  USER=$(id -u -n)
  GROUP=$(id -g -n)
  sudo chown -R ${USER}:${GROUP} ${BASE_DIR}
}

build_module() {
	pushd ${LVD_DOMAINS}
	make

	if [[ ! -n ${BOOT_KO} ]] || [[ ! -n ${KLCD_KO} ]] || [[ ! -n ${LCD_KO} ]];then 
		echo "Building autogenerated module failed"
	else
		echo "Module successfully built"
	fi
	popd
}

load_bflank_module() {
	sudo ${MSR_ARTIFACT}/toggle_ht.sh off
	pushd "${BFLANK_BUILD}"
	make driver_quick && make quick
	popd
}

load_module() {
	load_bflank_module;
	pushd ${LVD_DOMAINS}
	./scripts/mk
	sleep 5;
	./scripts/loadex ${TESTMOD}
	# allow some time for the module to get loaded
	sleep 120;
	popd
}

get_test_output() {
  TEST_NAME=$1
  GREP_STR="test_marshal_${TEST_NAME}:"
  OUTPUT=$(sudo dmesg | grep ${GREP_STR} | tail -1 | awk '{print $(NF-1)}')
  echo ${OUTPUT}
}

test_module() {
  echo "test, number of cycles"
  for t in "empty" "int" "array" "string" "voidptr" "union"; do
    CYCLES=$(get_test_output ${t})
    echo "${t}, ${CYCLES}" 
  done
}

chown
build_module
load_module
test_module
